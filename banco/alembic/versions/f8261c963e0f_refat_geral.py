"""refat_geral

Revision ID: f8261c963e0f
Revises:
Create Date: 2024-05-18 15:38:28.913874

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f8261c963e0f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categorias",
        sa.Column("nome", sa.String(), nullable=False),
        sa.Column("descricao", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("nome"),
    )
    op.create_table(
        "usuarios",
        sa.Column("nome", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("_senha", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index("idx_email", "usuarios", ["email"], unique=False)
    op.create_index("idx_nome", "usuarios", ["nome"], unique=False)
    op.create_table(
        "lancamentos_recorrentes",
        sa.Column("valor", sa.Float(), nullable=False),
        sa.Column("usuario_id", sa.UUID(), nullable=False),
        sa.Column("categoria_id", sa.UUID(), nullable=False),
        sa.Column("inicia_em", sa.DateTime(), nullable=False),
        sa.Column("termina_em", sa.DateTime(), nullable=True),
        sa.Column("frequencia", sa.Integer(), nullable=False),
        sa.Column(
            "tipo_frequencia",
            postgresql.ENUM(
                "minuto",
                "hora",
                "diario",
                "semanal",
                "mensal",
                "anual",
                name="tipo_frequencia",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["categoria_id"],
            ["categorias.id"],
        ),
        sa.ForeignKeyConstraint(
            ["usuario_id"],
            ["usuarios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "historicos",
        sa.Column("valor", sa.Float(), nullable=False),
        sa.Column("usuario_id", sa.UUID(), nullable=False),
        sa.Column("categoria_id", sa.UUID(), nullable=False),
        sa.Column("data", sa.DateTime(), nullable=False),
        sa.Column("lancamento_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["categoria_id"],
            ["categorias.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lancamento_id"],
            ["lancamentos_recorrentes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["usuario_id"],
            ["usuarios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("historicos")
    op.drop_table("lancamentos_recorrentes")
    op.drop_index("idx_nome", table_name="usuarios")
    op.drop_index("idx_email", table_name="usuarios")
    op.drop_table("usuarios")
    op.drop_table("categorias")
    # ### end Alembic commands ###
